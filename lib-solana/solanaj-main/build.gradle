/*
 * Copyright (c) 2022 Solana Mobile Inc.
 */

plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}

android {
    namespace = "org.p2p.solanaj"

    compileSdk 33

    defaultConfig {
        minSdk 19
        targetSdk 33
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = group
            artifactId = 'org.p2p.solanaj'

            afterEvaluate {
                from components.release
            }
        }
    }
}

signing {
    // Signing private key and password provided by ORG_GRADLE_PROJECT_signingKey and
    // ORG_GRADLE_PROJECT_signingPassword, respectively
    def signingKey = findProperty('signingKey')
    def signingPassword = findProperty('signingPassword')
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.release
}

// Define JavaDoc build task for all variants
android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompileProvider.get().source
        classpath = project.files(android.getBootClasspath().join(File.pathSeparator))
        classpath += files(variant.javaCompileProvider.get().classpath)
        options.links("https://docs.oracle.com/javase/8/docs/api/")
        options.links("https://d.android.com/reference/")
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}

// Build JavaDoc when making a release build
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.dependsOn("generateReleaseJavadoc")
    }
}

dependencies {
    implementation 'org.bitcoinj:bitcoinj-core:0.16.2'
    implementation 'com.squareup.moshi:moshi:1.14.0'
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'


}