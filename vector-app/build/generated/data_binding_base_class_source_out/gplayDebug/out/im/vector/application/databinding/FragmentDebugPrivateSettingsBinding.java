// Generated by view binder compiler. Do not edit!
package im.vector.application.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import im.vector.app.features.debug.settings.OverrideDropdownView;
import im.vector.application.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDebugPrivateSettingsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final OverrideDropdownView forceChangeAvatarCapability;

  @NonNull
  public final OverrideDropdownView forceChangeDisplayNameCapability;

  @NonNull
  public final CheckBox forceDialPadTabDisplay;

  @NonNull
  public final CheckBox forceLoginFallback;

  @NonNull
  public final TextView releaseNotesActivityHasBeenDisplayed;

  @NonNull
  public final Button releaseNotesActivityHasBeenDisplayedReset;

  @NonNull
  public final Button showReleaseNotesActivity;

  private FragmentDebugPrivateSettingsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull CoordinatorLayout coordinatorLayout,
      @NonNull OverrideDropdownView forceChangeAvatarCapability,
      @NonNull OverrideDropdownView forceChangeDisplayNameCapability,
      @NonNull CheckBox forceDialPadTabDisplay, @NonNull CheckBox forceLoginFallback,
      @NonNull TextView releaseNotesActivityHasBeenDisplayed,
      @NonNull Button releaseNotesActivityHasBeenDisplayedReset,
      @NonNull Button showReleaseNotesActivity) {
    this.rootView = rootView;
    this.coordinatorLayout = coordinatorLayout;
    this.forceChangeAvatarCapability = forceChangeAvatarCapability;
    this.forceChangeDisplayNameCapability = forceChangeDisplayNameCapability;
    this.forceDialPadTabDisplay = forceDialPadTabDisplay;
    this.forceLoginFallback = forceLoginFallback;
    this.releaseNotesActivityHasBeenDisplayed = releaseNotesActivityHasBeenDisplayed;
    this.releaseNotesActivityHasBeenDisplayedReset = releaseNotesActivityHasBeenDisplayedReset;
    this.showReleaseNotesActivity = showReleaseNotesActivity;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDebugPrivateSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDebugPrivateSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_debug_private_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDebugPrivateSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.forceChangeAvatarCapability;
      OverrideDropdownView forceChangeAvatarCapability = ViewBindings.findChildViewById(rootView, id);
      if (forceChangeAvatarCapability == null) {
        break missingId;
      }

      id = R.id.forceChangeDisplayNameCapability;
      OverrideDropdownView forceChangeDisplayNameCapability = ViewBindings.findChildViewById(rootView, id);
      if (forceChangeDisplayNameCapability == null) {
        break missingId;
      }

      id = R.id.forceDialPadTabDisplay;
      CheckBox forceDialPadTabDisplay = ViewBindings.findChildViewById(rootView, id);
      if (forceDialPadTabDisplay == null) {
        break missingId;
      }

      id = R.id.forceLoginFallback;
      CheckBox forceLoginFallback = ViewBindings.findChildViewById(rootView, id);
      if (forceLoginFallback == null) {
        break missingId;
      }

      id = R.id.releaseNotesActivityHasBeenDisplayed;
      TextView releaseNotesActivityHasBeenDisplayed = ViewBindings.findChildViewById(rootView, id);
      if (releaseNotesActivityHasBeenDisplayed == null) {
        break missingId;
      }

      id = R.id.releaseNotesActivityHasBeenDisplayedReset;
      Button releaseNotesActivityHasBeenDisplayedReset = ViewBindings.findChildViewById(rootView, id);
      if (releaseNotesActivityHasBeenDisplayedReset == null) {
        break missingId;
      }

      id = R.id.showReleaseNotesActivity;
      Button showReleaseNotesActivity = ViewBindings.findChildViewById(rootView, id);
      if (showReleaseNotesActivity == null) {
        break missingId;
      }

      return new FragmentDebugPrivateSettingsBinding((CoordinatorLayout) rootView,
          coordinatorLayout, forceChangeAvatarCapability, forceChangeDisplayNameCapability,
          forceDialPadTabDisplay, forceLoginFallback, releaseNotesActivityHasBeenDisplayed,
          releaseNotesActivityHasBeenDisplayedReset, showReleaseNotesActivity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
