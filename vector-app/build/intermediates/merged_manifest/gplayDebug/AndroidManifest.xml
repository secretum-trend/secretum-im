<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="im.vector.app.debug"
<<<<<<< Updated upstream
    android:versionCode="10"
=======
    android:versionCode="214265900"
>>>>>>> Stashed changes
    android:versionName="1.5.24-dev" >

    <uses-sdk
        android:minSdkVersion="21"
        android:targetSdkVersion="33" />

    <!-- Needed for VOIP call to detect and switch to headset -->
    <uses-permission
        android:name="android.permission.BLUETOOTH"
        android:maxSdkVersion="30" />
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /> <!-- https://developer.android.com/develop/ui/views/notifications/notification-permission#exemptions -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" /> <!-- Call feature -->
    <uses-permission android:name="android.permission.MANAGE_OWN_CALLS" /> <!-- Commented because Google PlayStore does not like we add permission if we are not requiring it. And it was added for future use -->
    <!-- uses-permission android:name="android.permission.READ_CALL_LOG" / -->
    <!-- Needed for voice call to toggle speaker on or off -->
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    <!--
         READ_PHONE_STATE is needed only if your calling app reads numbers from the `PHONE_STATE`
            intent action.
    -->
    <!-- Needed to show incoming calls activity in lock screen -->
    <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT" />
    <uses-permission android:name="android.permission.WAKE_LOCK" /> <!-- Needed for incoming calls -->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" /> <!-- To be able to install APK from the application -->
    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES" /> <!-- Location Sharing -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /> <!-- Adding CAMERA permission prevents Chromebooks to see the application on the PlayStore -->
    <!-- Tell that the Camera is not mandatory to install the application -->
    <uses-feature
        android:name="android.hardware.camera"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.camera.autofocus"
        android:required="false" /> <!-- Since Android 11, see https://developer.android.com/training/package-visibility -->
    <queries>

        <!--
         To open URL in CustomTab (prefetch, etc.). It makes CustomTabsClient.getPackageName() work
         see https://developer.android.com/training/package-visibility/use-cases#open-urls-custom-tabs
        -->
        <intent>
            <action android:name="android.support.customtabs.action.CustomTabsService" />
        </intent>

        <!--
        The app can open attachments of any mime type
        see https://developer.android.com/training/package-visibility/use-cases#open-a-file
        -->
        <intent>
            <action android:name="android.intent.action.VIEW" />

            <data android:mimeType="*/*" />
        </intent>
        <intent>
            <action android:name="org.unifiedpush.android.distributor.REGISTER" />
        </intent>
        <intent>
            <action android:name="org.unifiedpush.android.distributor.UNREGISTER" />
        </intent> <!-- Support querying whether an app with the wallet endpoint role is available -->
        <intent>
            <action android:name="android.intent.action.VIEW" />

            <category android:name="android.intent.category.BROWSABLE" />

            <data android:scheme="solana-wallet" />
        </intent>
    </queries>

    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" /> <!-- TODO Is WRITE_EXTERNAL_STORAGE necessary? -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.REORDER_TASKS" />
    <uses-permission android:name="android.permission.USE_BIOMETRIC" /> <!-- suppress DeprecatedClassUsageInspection -->
    <uses-permission android:name="android.permission.USE_FINGERPRINT" /> <!-- Required by older versions of Google Play services to create IID tokens -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />
    <uses-feature
        android:name="android.hardware.wifi"
        android:required="false" />

    <uses-permission android:name="android.permission.WRITE_CALENDAR" />
    <uses-permission android:name="android.permission.READ_CALENDAR" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

    <permission
        android:name="im.vector.app.debug.DYNAMIC_RECEIVER_NOT_EXPORTED_PERMISSION"
        android:protectionLevel="signature" />

    <uses-permission android:name="im.vector.app.debug.DYNAMIC_RECEIVER_NOT_EXPORTED_PERMISSION" />

    <application
        android:name="im.vector.app.VectorApplication"
        android:allowBackup="false"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:debuggable="true"
        android:fullBackupContent="@xml/backup_rules"
        android:hasFragileUserData="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:largeHeap="true"
        android:networkSecurityConfig="@xml/network_security_config"
        android:resizeableActivity="true"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
<<<<<<< Updated upstream
        android:taskAffinity="im.vector.app.debug.H_d1f79699"
=======
        android:taskAffinity="im.vector.app.debug.H_e7971e7e"
>>>>>>> Stashed changes
        android:testOnly="true"
        android:theme="@style/Theme.Vector.Light" >
        <activity android:name="im.vector.app.features.debug.TestLinkifyActivity" />
        <activity android:name="im.vector.app.features.debug.DebugPermissionActivity" />
        <activity android:name="im.vector.app.features.debug.jitsi.DebugJitsiActivity" />
        <activity android:name="im.vector.app.features.debug.analytics.DebugAnalyticsActivity" />
        <activity android:name="im.vector.app.features.debug.settings.DebugPrivateSettingsActivity" />
        <activity android:name="im.vector.app.features.debug.sas.DebugSasEmojiActivity" />
        <activity android:name="im.vector.app.features.debug.features.DebugFeaturesSettingsActivity" />
        <activity android:name="im.vector.app.features.debug.DebugMenuActivity" />
        <activity android:name="im.vector.app.features.debug.leak.DebugMemoryLeaksActivity" />
        <activity
            android:name="com.facebook.flipper.android.diagnostics.FlipperDiagnosticActivity"
            android:exported="true" />

        <!-- Firebase components -->
        <meta-data
            android:name="firebase_analytics_collection_deactivated"
            android:value="true" /> <!-- Add tools:ignore="Instantiatable" for the error reported only by the CI :/ -->
        <service
            android:name="im.vector.app.push.fcm.VectorFirebaseMessagingService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service> <!-- Providers -->
        <!-- Remove WorkManagerInitializer Provider because we are using on-demand initialization of WorkManager -->
        <provider
            android:name="androidx.startup.InitializationProvider"
            android:authorities="im.vector.app.debug.androidx-startup"
            android:exported="false" >
            <meta-data
                android:name="org.jitsi.meet.sdk.JitsiInitializer"
                android:value="androidx.startup" />
            <meta-data
                android:name="androidx.lifecycle.ProcessLifecycleInitializer"
                android:value="androidx.startup" />
        </provider>
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="im.vector.app.debug.fileProvider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/sdk_provider_paths" />
        </provider> <!-- Sentry auto-initialization disable -->
        <meta-data
            android:name="io.sentry.auto-init"
            android:value="false" /> <!-- No limit for screen ratio: avoid black strips -->
        <meta-data
            android:name="android.max_aspect"
            android:value="9.9" />
        <meta-data
            android:name="com.google.android.gms.car.application"
            android:resource="@xml/automotive_app_desc" />

        <activity
            android:name="im.vector.app.features.MainActivity"
            android:theme="@style/Theme.Vector.Launcher" /> <!-- Activity alias for the launcher Activity (must be declared after the Activity it targets) -->
        <!-- exported="true" is required to launch application -->
        <activity-alias
            android:name="im.vector.application.features.Alias"
            android:exported="true"
            android:targetActivity="im.vector.app.features.MainActivity" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data
                android:name="android.app.shortcuts"
                android:resource="@xml/shortcuts" />
        </activity-alias>

        <activity android:name="im.vector.app.features.home.HomeActivity" />
        <activity
            android:name="im.vector.app.features.login.SSORedirectRouterActivity"
            android:exported="true"
            android:theme="@style/Theme.Vector.Black.Transparent" >

            <!-- Add intent filter to handle redirection URL after SSO login in external browser -->
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data
                    android:host="connect"
                    android:scheme="element" />
            </intent-filter>
        </activity>
        <activity
            android:name="im.vector.app.features.login.LoginActivity"
            android:launchMode="singleTask"
            android:windowSoftInputMode="adjustResize" />
        <activity
            android:name="im.vector.app.features.onboarding.OnboardingActivity"
            android:launchMode="singleTask"
            android:windowSoftInputMode="adjustResize" /> <!-- Add tools:ignore="Instantiatable" for the error reported only by CI :/ -->
        <activity
            android:name="im.vector.app.features.media.VectorAttachmentViewerActivity"
            android:theme="@style/Theme.Vector.Black.Transparent" />
        <activity android:name="im.vector.app.features.media.BigImageViewerActivity" />
        <activity
            android:name="im.vector.app.features.rageshake.BugReportActivity"
            android:label="@string/title_activity_bug_report" />
        <activity
            android:name="im.vector.app.features.settings.VectorSettingsActivity"
            android:label="@string/title_activity_settings"
            android:windowSoftInputMode="adjustResize" />
        <activity
            android:name="im.vector.app.features.crypto.keysbackup.restore.KeysBackupRestoreActivity"
            android:label="@string/title_activity_keys_backup_setup" />
        <activity
            android:name="im.vector.app.features.crypto.keysbackup.setup.KeysBackupSetupActivity"
            android:label="@string/title_activity_keys_backup_restore" />
        <activity
            android:name="im.vector.app.features.crypto.keysbackup.settings.KeysBackupManageActivity"
            android:label="@string/encryption_message_recovery" />
        <activity
            android:name="im.vector.app.features.reactions.EmojiReactionPickerActivity"
            android:label="@string/title_activity_emoji_reaction_picker" />
        <activity android:name="im.vector.app.features.roomdirectory.createroom.CreateRoomActivity" />
        <activity android:name="im.vector.app.features.roomdirectory.RoomDirectoryActivity" />
        <activity android:name="im.vector.app.features.roomdirectory.roompreview.RoomPreviewActivity" />
        <activity android:name="im.vector.app.features.home.room.filtered.FilteredRoomsActivity" />
        <activity android:name="im.vector.app.features.home.room.threads.ThreadsActivity" />
        <activity
            android:name="im.vector.app.features.home.room.detail.RoomDetailActivity"
            android:parentActivityName="im.vector.app.features.home.HomeActivity"
            android:windowSoftInputMode="adjustResize" >
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".features.home.HomeActivity" />
        </activity>
        <activity android:name="im.vector.app.features.createdirect.CreateDirectRoomActivity" />
        <activity android:name="im.vector.app.features.invite.InviteUsersToRoomActivity" />
        <activity android:name="im.vector.app.features.webview.VectorWebViewActivity" /> <!-- Activity to intercept links coming from a web instance -->
        <!-- exported="true" is required to handle android.intent.action.VIEW for URL redirection -->
        <activity
            android:name="im.vector.app.features.link.LinkHandlerActivity"
            android:enabled="true"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data android:scheme="https" />
                <data android:host="riot.im" />
                <data android:host="app.element.io" />
                <data android:host="mobile.element.io" />
                <data android:host="develop.element.io" />
                <data android:host="staging.element.io" />
            </intent-filter>
        </activity> <!-- Activity alias for matrix.to or element permalinks -->
        <!-- exported="true" is required to handle android.intent.action.VIEW for URL redirection -->
        <activity-alias
            android:name="im.vector.app.features.permalink.PermalinkHandlerActivity"
            android:enabled="true"
            android:exported="true"
            android:launchMode="singleTask"
            android:targetActivity="im.vector.app.features.link.LinkHandlerActivity" >
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data android:scheme="http" />
                <data android:scheme="https" />
                <data android:host="matrix.to" />
                <data
                    android:host="user"
                    android:scheme="element" />
                <data
                    android:host="room"
                    android:scheme="element" />
            </intent-filter>
        </activity-alias> <!-- exported="true" is required for the share functionality -->
        <activity
            android:name="im.vector.app.features.share.IncomingShareActivity"
            android:exported="true"
            android:parentActivityName="im.vector.app.features.home.HomeActivity" >
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".features.home.HomeActivity" />

            <intent-filter>
                <action android:name="android.intent.action.SEND" />

                <data android:mimeType="*/*" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.OPENABLE" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE" />

                <data android:mimeType="*/*" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.OPENABLE" />
            </intent-filter>

            <meta-data
                android:name="android.service.chooser.chooser_target_service"
                android:value="androidx.sharetarget.ChooserTargetServiceCompat" />
        </activity>
        <activity android:name="im.vector.app.features.roomprofile.RoomProfileActivity" />
        <activity android:name="im.vector.app.features.roomprofile.settings.joinrule.RoomJoinRuleActivity" />
        <activity android:name="im.vector.app.features.signout.hard.SignedOutActivity" />
        <activity
            android:name="im.vector.app.features.signout.soft.SoftLogoutActivity"
            android:windowSoftInputMode="adjustResize" />
        <activity
            android:name="im.vector.app.features.roommemberprofile.RoomMemberProfileActivity"
            android:parentActivityName="im.vector.app.features.home.HomeActivity" >
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".features.home.HomeActivity" />
        </activity>
        <activity android:name="im.vector.app.features.qrcode.QrCodeScannerActivity" />
        <activity android:name="im.vector.app.features.crypto.quads.SharedSecureStorageActivity" />
        <activity
            android:name="com.yalantis.ucrop.UCropActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name="im.vector.app.features.attachments.preview.AttachmentsPreviewActivity"
            android:theme="@style/Theme.Vector.Black.AttachmentsPreview" />
        <activity
            android:name="im.vector.app.features.call.VectorCallActivity"
            android:configChanges="screenSize|smallestScreenSize|screenLayout|orientation"
            android:excludeFromRecents="true"
            android:launchMode="singleTask"
            android:supportsPictureInPicture="true"
<<<<<<< Updated upstream
            android:taskAffinity=".features.call.VectorCallActivity.H_d1f79699" /> <!-- PIP Support https://developer.android.com/guide/topics/ui/picture-in-picture -->
=======
            android:taskAffinity=".features.call.VectorCallActivity.H_e7971e7e" /> <!-- PIP Support https://developer.android.com/guide/topics/ui/picture-in-picture -->
>>>>>>> Stashed changes
        <activity
            android:name="im.vector.app.features.call.conference.VectorJitsiActivity"
            android:configChanges="orientation|smallestScreenSize|screenLayout|screenSize"
            android:launchMode="singleTask"
            android:supportsPictureInPicture="true" />
        <activity android:name="im.vector.app.features.terms.ReviewTermsActivity" />
        <activity
            android:name="im.vector.app.features.widgets.WidgetActivity"
            android:configChanges="screenSize|smallestScreenSize|screenLayout|orientation"
            android:supportsPictureInPicture="true" />
        <activity android:name="im.vector.app.features.pin.PinActivity" />
        <activity android:name="im.vector.app.features.analytics.ui.consent.AnalyticsOptInActivity" />
        <activity android:name="im.vector.app.features.home.room.detail.search.SearchActivity" />
        <activity android:name="im.vector.app.features.usercode.UserCodeActivity" />
        <activity android:name="im.vector.app.features.call.transfer.CallTransferActivity" /> <!-- Single instance is very important for the custom scheme callback -->
        <activity
            android:name="im.vector.app.features.auth.ReAuthActivity"
            android:launchMode="singleInstance" >

            <!--
            XXX: UIA SSO has only web fallback, i.e no url redirect, so for now we comment this out
            hopefully, we would use it when finally available
            -->
            <!-- Add intent filter to handle redirection URL after SSO login in external browser -->
            <!-- <intent-filter> -->
            <!-- <action android:name="android.intent.action.VIEW" /> -->


            <!-- <category android:name="android.intent.category.DEFAULT" /> -->
            <!-- <category android:name="android.intent.category.BROWSABLE" /> -->


            <!-- <data -->
            <!-- android:host="reauth" -->
            <!-- android:scheme="element" /> -->
            <!-- </intent-filter> -->
        </activity>
        <activity android:name="im.vector.app.features.devtools.RoomDevToolActivity" />
        <activity android:name="im.vector.app.features.spaces.SpacePreviewActivity" />
        <activity android:name="im.vector.app.features.spaces.SpaceExploreActivity" />
        <activity android:name="im.vector.app.features.spaces.SpaceCreationActivity" />
        <activity android:name="im.vector.app.features.spaces.manage.SpaceManageActivity" />
        <activity android:name="im.vector.app.features.spaces.people.SpacePeopleActivity" />
        <activity android:name="im.vector.app.features.spaces.leave.SpaceLeaveAdvancedActivity" />
        <activity android:name="im.vector.app.features.poll.create.CreatePollActivity" />
        <activity android:name="im.vector.app.features.location.LocationSharingActivity" />
        <activity android:name="im.vector.app.features.location.live.map.LiveLocationMapViewActivity" />
        <activity android:name="im.vector.app.features.settings.font.FontScaleSettingActivity" />
        <activity android:name="im.vector.app.features.call.dialpad.PstnDialActivity" />
        <activity android:name="im.vector.app.features.home.room.list.home.invites.InvitesActivity" />
        <activity android:name="im.vector.app.features.home.room.list.home.release.ReleaseNotesActivity" />
        <activity android:name="im.vector.app.features.settings.devices.v2.overview.SessionOverviewActivity" />
        <activity android:name="im.vector.app.features.settings.devices.v2.othersessions.OtherSessionsActivity" />
        <activity android:name="im.vector.app.features.settings.devices.v2.details.SessionDetailsActivity" />
        <activity android:name="im.vector.app.features.settings.devices.v2.rename.RenameSessionActivity" />
        <activity android:name="im.vector.app.features.login.qr.QrCodeLoginActivity" /> <!-- Services -->
        <service
            android:name="im.vector.app.core.services.CallAndroidService"
            android:exported="false"
            android:foregroundServiceType="phoneCall" >

            <!-- in order to get headset button events -->
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </service> <!-- Add tools:ignore="Instantiatable" for the error reported only by CI and for lintGplayRelease check :/ -->
        <service
            android:name="im.vector.app.core.services.VectorSyncAndroidService"
            android:exported="false"
            android:foregroundServiceType="dataSync" />
        <service
            android:name="im.vector.app.features.call.telecom.VectorConnectionAndroidService"
            android:exported="false"
            android:permission="android.permission.BIND_TELECOM_CONNECTION_SERVICE" >
            <intent-filter>
                <action android:name="android.telecom.ConnectionService" />
            </intent-filter>
        </service>
        <service
            android:name="im.vector.app.features.location.live.tracking.LocationSharingAndroidService"
            android:exported="false"
            android:foregroundServiceType="location" />
        <service
            android:name="im.vector.app.features.start.StartAppAndroidService"
            android:exported="false"
            android:foregroundServiceType="dataSync" />
        <service
            android:name="im.vector.app.features.call.webrtc.ScreenCaptureAndroidService"
            android:exported="false"
            android:foregroundServiceType="mediaProjection" /> <!-- Receivers -->
        <receiver
            android:name="im.vector.app.features.call.service.CallHeadsUpActionReceiver"
            android:exported="false" />
        <receiver
            android:name="im.vector.app.features.settings.troubleshoot.TestNotificationReceiver"
            android:exported="false" /> <!-- Exported false, should only be accessible from this app!! -->
        <receiver
            android:name="im.vector.app.features.notifications.NotificationBroadcastReceiver"
            android:enabled="true"
            android:exported="false" />
        <!--
        A media button receiver receives and helps translate hardware media playback buttons,
        such as those found on wired and wireless headsets, into the appropriate callbacks in your app.
        -->
        <receiver
            android:name="androidx.media.session.MediaButtonReceiver"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver> <!-- UnifiedPush -->
        <receiver
            android:name="im.vector.app.core.pushers.VectorUnifiedPushMessagingReceiver"
            android:enabled="true"
            android:exported="true" >
            <intent-filter>
                <action android:name="org.unifiedpush.android.connector.MESSAGE" />
                <action android:name="org.unifiedpush.android.connector.UNREGISTERED" />
                <action android:name="org.unifiedpush.android.connector.NEW_ENDPOINT" />
                <action android:name="org.unifiedpush.android.connector.REGISTRATION_FAILED" />
                <action android:name="org.unifiedpush.android.connector.REGISTRATION_REFUSED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="im.vector.app.core.pushers.KeepInternalDistributor"
            android:enabled="true"
            android:exported="false" >
            <intent-filter>

                <!--
                This action is checked to track installed and uninstalled distributors.
                We declare it to keep the background sync as an internal
                unifiedpush distributor.
                -->
                <action android:name="org.unifiedpush.android.distributor.REGISTER" />
            </intent-filter>
        </receiver>

        <activity
            android:name="im.vector.lib.ui.styles.debug.DebugMaterialThemeLightDefaultActivity"
            android:theme="@style/Theme.Debug.Light" />
        <activity
            android:name="im.vector.lib.ui.styles.debug.DebugMaterialThemeLightTestActivity"
            android:theme="@style/Theme.Debug.Light.Test" />
        <activity
            android:name="im.vector.lib.ui.styles.debug.DebugMaterialThemeLightVectorActivity"
            android:theme="@style/Theme.Vector.Light" />
        <activity
            android:name="im.vector.lib.ui.styles.debug.DebugMaterialThemeDarkDefaultActivity"
            android:theme="@style/Theme.Debug.Dark" />
        <activity
            android:name="im.vector.lib.ui.styles.debug.DebugMaterialThemeDarkTestActivity"
            android:theme="@style/Theme.Debug.Dark.Test" />
        <activity
            android:name="im.vector.lib.ui.styles.debug.DebugMaterialThemeDarkVectorActivity"
            android:theme="@style/Theme.Vector.Dark" />
        <activity
            android:name="im.vector.lib.ui.styles.debug.DebugVectorButtonStylesLightActivity"
            android:theme="@style/Theme.Vector.Light" />
        <activity
            android:name="im.vector.lib.ui.styles.debug.DebugVectorButtonStylesDarkActivity"
            android:theme="@style/Theme.Vector.Dark" />
        <activity
            android:name="im.vector.lib.ui.styles.debug.DebugVectorTextViewLightActivity"
            android:theme="@style/Theme.Vector.Light" />
        <activity
            android:name="im.vector.lib.ui.styles.debug.DebugVectorTextViewDarkActivity"
            android:theme="@style/Theme.Vector.Dark" />
        <!--
         The SDK offers a secured File provider to access downloaded files.
         Access to these file will be given via the FileService, with a temporary
         read access permission
        -->
        <provider
            android:name="org.matrix.android.sdk.api.session.file.MatrixSDKFileProvider"
            android:authorities="im.vector.app.debug.mx-sdk.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/sdk_provider_paths" />
        </provider>
        <provider
            android:name="im.vector.lib.multipicker.provider.MultiPickerFileProvider"
            android:authorities="im.vector.app.debug.multipicker.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/multipicker_provider_paths" />
        </provider>

        <activity
            android:name="androidx.fragment.app.testing.EmptyFragmentActivity"
            android:exported="true"
            android:multiprocess="true"
            android:taskAffinity=""
            android:theme="@style/FragmentScenarioEmptyFragmentActivityTheme" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.google.android.gms.oss.licenses.OssLicensesMenuActivity"
            android:label="@string/oss_license_title" />
        <activity android:name="com.google.android.gms.oss.licenses.OssLicensesActivity" />

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </receiver>
        <!--
             FirebaseMessagingService performs security checks at runtime,
             but set to not exported to explicitly avoid allowing another app to call it.
        -->
        <service
            android:name="com.google.firebase.messaging.FirebaseMessagingService"
            android:directBootAware="true"
            android:exported="false" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service
            android:name="com.google.firebase.components.ComponentDiscoveryService"
            android:directBootAware="true"
            android:exported="false" >
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.messaging.FirebaseMessagingRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.appdistribution.ktx.FirebaseAppDistributionKtxRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.appdistribution.FirebaseAppDistributionApiRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.ktx.FirebaseCommonKtxRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.datatransport.TransportRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.installations.FirebaseInstallationsRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
        </service>

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="im.vector.app.debug.firebaseinitprovider"
            android:directBootAware="true"
            android:exported="false"
            android:initOrder="100" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <activity
            android:name="org.jitsi.meet.sdk.JitsiMeetActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize|uiMode"
            android:launchMode="singleTask"
            android:resizeableActivity="true"
            android:supportsPictureInPicture="true"
            android:theme="@style/JitsiMeetActivityStyle"
            android:windowSoftInputMode="adjustResize" />

        <service
            android:name="org.jitsi.meet.sdk.ConnectionService"
            android:exported="true"
            android:permission="android.permission.BIND_TELECOM_CONNECTION_SERVICE" >
            <intent-filter>
                <action android:name="android.telecom.ConnectionService" />
            </intent-filter>
        </service>
        <service
            android:name="org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService"
            android:foregroundServiceType="mediaProjection" />

        <provider
            android:name="com.reactnativecommunity.webview.RNCWebViewFileProvider"
            android:authorities="im.vector.app.debug.fileprovider"
            android:enabled="false"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_provider_paths" />
        </provider>

        <meta-data
            android:name="com.bumptech.glide.integration.okhttp3.OkHttpGlideModule"
            android:value="GlideModule" />

        <provider
            android:name="com.oblador.performance.StartTimeProvider"
            android:authorities="im.vector.app.debug.start.time.provider"
            android:exported="false"
            android:initOrder="200" />

        <uses-library
            android:name="androidx.window.extensions"
            android:required="false" />
        <uses-library
            android:name="androidx.window.sidecar"
            android:required="false" />

        <provider
            android:name="leakcanary.internal.LeakCanaryFileProvider"
            android:authorities="com.squareup.leakcanary.fileprovider.im.vector.app.debug"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/leak_canary_file_paths" />
        </provider>

        <activity
            android:name="leakcanary.internal.activity.LeakActivity"
            android:exported="true"
            android:icon="@mipmap/leak_canary_icon"
            android:label="@string/leak_canary_display_activity_label"
            android:taskAffinity="com.squareup.leakcanary.im.vector.app.debug"
            android:theme="@style/leak_canary_LeakCanary.Base" >
            <intent-filter android:label="@string/leak_canary_import_hprof_file" >
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data android:scheme="file" />
                <data android:scheme="content" />
                <data android:mimeType="*/*" />
                <data android:host="*" />
                <data android:pathPattern=".*\\.hprof" />
                <data android:pathPattern=".*\\..*\\.hprof" />
                <data android:pathPattern=".*\\..*\\..*\\.hprof" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\.hprof" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\.hprof" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\.hprof" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\..*\\.hprof" />
                <!--
            Since hprof isn't a standard MIME type, we have to declare such patterns.
            Most file providers will generate URIs including their own package name,
            which contains `.` characters that must be explicitly escaped in pathPattern.
            @see https://stackoverflow.com/a/31028507/703646
                -->
            </intent-filter>
        </activity>

        <activity-alias
            android:name="leakcanary.internal.activity.LeakLauncherActivity"
            android:banner="@drawable/leak_canary_tv_icon"
            android:enabled="@bool/leak_canary_add_launcher_icon"
            android:exported="true"
            android:icon="@mipmap/leak_canary_icon"
            android:label="@string/leak_canary_display_activity_label"
            android:targetActivity="leakcanary.internal.activity.LeakActivity"
            android:taskAffinity="com.squareup.leakcanary.im.vector.app.debug"
            android:theme="@style/leak_canary_LeakCanary.Base" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
                <!-- Android TV launcher intent -->
                <category android:name="android.intent.category.LEANBACK_LAUNCHER" />
            </intent-filter>
        </activity-alias>

        <activity
            android:name="leakcanary.internal.RequestPermissionActivity"
            android:excludeFromRecents="true"
            android:icon="@mipmap/leak_canary_icon"
            android:label="@string/leak_canary_storage_permission_activity_label"
            android:taskAffinity="com.squareup.leakcanary.im.vector.app.debug"
            android:theme="@style/leak_canary_Theme.Transparent" />

        <receiver android:name="leakcanary.internal.NotificationReceiver" />

        <meta-data
            android:name="com.facebook.soloader.enabled"
            android:value="false" />

        <service
            android:name="androidx.sharetarget.ChooserTargetServiceCompat"
            android:exported="true"
            android:permission="android.permission.BIND_CHOOSER_TARGET_SERVICE" >
            <intent-filter>
                <action android:name="android.service.chooser.ChooserTargetService" />
            </intent-filter>
        </service>
        <service
            android:name="com.google.android.datatransport.runtime.backends.TransportBackendDiscovery"
            android:exported="false" >
            <meta-data
                android:name="backend:com.google.android.datatransport.cct.CctBackendFactory"
                android:value="cct" />
        </service>
        <service
            android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" >
        </service>

        <receiver
            android:name="com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver"
            android:exported="false" />

        <service
            android:name="androidx.work.impl.background.systemalarm.SystemAlarmService"
            android:directBootAware="false"
            android:enabled="@bool/enable_system_alarm_service_default"
            android:exported="false" />
        <service
            android:name="androidx.work.impl.background.systemjob.SystemJobService"
            android:directBootAware="false"
            android:enabled="@bool/enable_system_job_service_default"
            android:exported="true"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="androidx.work.impl.foreground.SystemForegroundService"
            android:directBootAware="false"
            android:enabled="@bool/enable_system_foreground_service_default"
            android:exported="false" />

        <receiver
            android:name="androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver"
            android:directBootAware="false"
            android:enabled="true"
            android:exported="false" />
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.BATTERY_OKAY" />
                <action android:name="android.intent.action.BATTERY_LOW" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.DEVICE_STORAGE_LOW" />
                <action android:name="android.intent.action.DEVICE_STORAGE_OK" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.RescheduleReceiver"
            android:directBootAware="false"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.TIME_SET" />
                <action android:name="android.intent.action.TIMEZONE_CHANGED" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver"
            android:directBootAware="false"
            android:enabled="@bool/enable_system_alarm_service_default"
            android:exported="false" >
            <intent-filter>
                <action android:name="androidx.work.impl.background.systemalarm.UpdateProxies" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.work.impl.diagnostics.DiagnosticsReceiver"
            android:directBootAware="false"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.DUMP" >
            <intent-filter>
                <action android:name="androidx.work.diagnostics.REQUEST_DIAGNOSTICS" />
            </intent-filter>
        </receiver>

        <service
            android:name="androidx.room.MultiInstanceInvalidationService"
            android:directBootAware="true"
            android:exported="false" /> <!-- 'android:authorities' must be unique in the device, across all apps -->
        <provider
            android:name="io.sentry.android.core.SentryInitProvider"
            android:authorities="im.vector.app.debug.SentryInitProvider"
            android:exported="false" />
        <provider
            android:name="io.sentry.android.core.SentryPerformanceProvider"
            android:authorities="im.vector.app.debug.SentryPerformanceProvider"
            android:exported="false"
            android:initOrder="200" />
        <provider
            android:name="ru.noties.jlatexmath.JLatexMathInitProvider"
            android:authorities="im.vector.app.debug.jlatexmathinitprovider"
            android:exported="false" />
        <provider
            android:name="leakcanary.internal.MainProcessAppWatcherInstaller"
            android:authorities="im.vector.app.debug.leakcanary-installer"
            android:enabled="@bool/leak_canary_watcher_auto_install"
            android:exported="false" />
        <provider
            android:name="leakcanary.internal.PlumberInstaller"
            android:authorities="im.vector.app.debug.plumber-installer"
            android:enabled="@bool/leak_canary_plumber_auto_install"
            android:exported="false" />
    </application>

</manifest>