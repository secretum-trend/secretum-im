query getNonceBy($publicKey: String!) {
    getNonce(payload: {publicKey: $publicKey}) {
        nonce
    }
}

query getNonceByUserId($userId: Int!){
    users_by_pk(id: $userId){
        nonce
    }
}


mutation joinPublicKeyToWhitelist($publicKey: String!) {
    joinWhitelistFree(address: $publicKey) {
        joined
    }
}

mutation verifySignature($publicKey: String!, $signature: String!) {
    authenticate(payload:{publicKey: $publicKey, signature: $signature}) {
        accessToken
        username
        password
    }
}

query getPartnerAddressBy($userId: Int!) {
    wallets(where: {user_id: {_eq: $userId}}) {
        address
    }
}

mutation createOfferBy($payLoad:CreateOfferPayload!) {
    createOffer(payload: $payLoad){
        trade_id
    }
}

mutation cancelOffer($tradeId: Int!) {
    cancelOffer(payload: {tradeId: $tradeId}) {
        updated
        __typename
    }
}

mutation AcceptTrade($tradeId: Int!) {
    acceptTrade(payload: {tradeId: $tradeId}) {
        updated
        __typename
    }
}

mutation InitializeTrade($tradeId: Int!) {
    initializeTrade(payload: {tradeId: $tradeId}) {
        updated
        __typename
    }
}

mutation ExchangeTrade($tradeId: Int!, $signature: String!) {
    exchangeTrade(payload: {tradeId: $tradeId, signature: $signature}) {
        updated
        __typename
    }
}

mutation buildInitializeTransaction($payload: InitializePayload!) {
    buildInitializeTransaction(payload: $payload) {
        transaction_base_64
    }
}

query GetTradeByPk($tradeId: Int!) {
    trades_by_pk(id: $tradeId) {
        id
        recipient_address
        recipient_token_address
        recipient_token_amount
        recipient_user_id
        sending_address
        sending_token_address
        sending_token_amount
        sending_user_id
        created_at
        updated_at
        status
        message
        userBySendingUserId {
            username
        }
        user {
            username
        }
    }
}

query GetRateByAddresses($addresses: [String!]) {
    token_rates(where: {token_address: {_in: $addresses}}) {
        name
        rate
        symbol
        token_address
        __typename
    }
}

query GetWalletByUsername($username: String!) {
    GetWalletByUsername(username: $username) {
        address
        user_id
        __typename
    }
}



